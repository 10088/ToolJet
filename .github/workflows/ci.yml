name: CI
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [develop, main]
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ (github.ref == 'refs/heads/develop' ||  github.ref == 'refs/heads/main') && github.run_number || github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: true
  NODE_OPTIONS: "--max-old-space-size=4096"
  LOCKBOX_MASTER_KEY: lockbox-master-key
  SECRET_KEY_BASE: secret-key-base
  NODE_ENV: test
  PG_HOST: postgres
  PG_PORT: 5432
  PG_USER: postgres
  PG_PASS: postgres
  PG_DB: tooljet_test
  HEROKU_APP_NAME: tooljet-deploy-${{ github.event.number }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
    steps:
      - uses: actions/checkout@v2
      - name: Install Heroku
        run: rm -rf /usr/local/bin/heroku && npm i -g heroku
      - name: Create Heroku App
        continue-on-error: true
        run: heroku create ${{ env.HEROKU_APP_NAME }}
      - name: Create Heroku Postgresql addon
        continue-on-error: true
        run: heroku addons:create heroku-postgresql:hobby-dev -a ${{ env.HEROKU_APP_NAME }}
      - name: Login to Heroku Container registry
        run: heroku container:login
      - name: Build and tag image
        run: docker buildx build --file=docker/heroku.Dockerfile --rm=true -t registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web .
      - name: Push image to heroku registry
        run: docker push registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web

  lint:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web:latest
    steps:
      - run: npm --prefix server run lint && npm --prefix frontend run lint

  unit-test:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web:latest
    steps:
      - run: npm --prefix server run test

  e2e-test:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web:latest
    steps:
      - run: npm --prefix server run test:e2e -- --silent

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      NODE_ENV: production
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
    steps:
      - name: Update Heroku
        run: rm -rf /usr/local/bin/heroku && npm i -g heroku
      - name: Login to Heroku container registry
        run: heroku container:login
      - name: Release
        run: heroku container:release web -a ${{ env.HEROKU_APP_NAME }}
