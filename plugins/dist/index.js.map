{"mappings":";;;;;;;;;;;;;;;;;;;2CCAM,kCAA8C;;AAGpD,GAAG,CAAC,0CAAoB,SAAS,oBAAoB;IACjD,UAAU,CAAC,KAAK,EAAE,CAAC;QACf,MAAM,CAAC,CAAC;YAAC,aAAa,GAAG,OAAO,EAAE,KAAK;YAAI,CAAc,eAAE,CAAkB;QAAC,CAAC;IACnF,CAAC;UACK,GAAG,CAAC,aAAa,EAAE,YAAY,EAAE,YAAY,EAAE,CAAC;QAClD,GAAG,CAAC,MAAM,GAAG,CAAC;QAAA,CAAC;QACf,GAAG,CAAC,QAAQ,GAAG,IAAI;QACnB,KAAK,CAAC,SAAS,GAAG,YAAY,CAAC,SAAS;QACxC,KAAK,CAAC,MAAM,GAAG,YAAY,CAAC,CAAS;QACrC,KAAK,CAAC,SAAS,GAAG,YAAY,CAAC,CAAY;QAC3C,KAAK,CAAC,WAAW,GAAG,aAAa,CAAC,CAAS;QAC3C,GAAG,CAAC,CAAC;YACD,MAAM,CAAE,SAAS;gBACb,IAAI,CAAC,CAAc;oBAAE,CAAC;wBAClB,KAAK,CAAC,QAAQ,GAAG,YAAY,CAAC,CAAW;wBACzC,KAAK,CAAC,MAAM,GAAG,YAAY,CAAC,CAAQ;wBACpC,QAAQ,GAAG,KAAK,CAAC,UAAG,EAAE,4BAA4B,EAAE,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,WAAW,EAAE,QAAQ,IAAI,CAAE,EAAC,QAAQ,EAAE,MAAM,IAAI,CAAE,KAAI,CAAC;4BAC3H,MAAM,EAAE,CAAK;4BACb,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW;wBACxC,CAAC;wBACD,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI;wBACjC,KAAK;oBACT,CAAC;gBACD,IAAI,CAAC,CAAiB;oBAAE,CAAC;wBACrB,KAAK,CAAC,QAAQ,GAAG,YAAY,CAAC,CAAW;wBACzC,QAAQ,GAAG,KAAK,CAAC,UAAG,EAAE,4BAA4B,EAAE,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,QAAQ,IAAI,CAAC;4BACpF,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW;wBACxC,CAAC;wBACD,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI;wBACjC,KAAK;oBACT,CAAC;gBACD,IAAI,CAAC,CAAe;oBAChB,QAAQ,GAAG,KAAK,CAAC,UAAG,EAAE,4BAA4B,EAAE,MAAM,CAAC,CAAC,EAAE,SAAS,IAAI,CAAC;wBACxE,MAAM,EAAE,CAAO;wBACf,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW;wBACpC,IAAI,EAAE,CAAC;4BACH,OAAO,EAAE,CAAC;gCACN,CAAC;oCACG,EAAE,EAAE,YAAY,CAAC,CAAW;oCAC5B,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAM;gCAC1C,CAAC;4BACL,CAAC;wBACL,CAAC;oBACL,CAAC;oBACD,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI;oBACjC,KAAK;gBAET,IAAI,CAAC,CAAe;oBAAE,CAAC;wBACnB,KAAK,CAAC,SAAS,GAAG,YAAY,CAAC,CAAW;wBAC1C,QAAQ,GAAG,KAAK,CAAC,UAAG,EAAE,4BAA4B,EAAE,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,IAAI,CAAC;4BACrF,MAAM,EAAE,CAAQ;4BAChB,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW;wBACxC,CAAC;wBACD,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI;wBACjC,KAAK;oBACT,CAAC;;QAET,CAAC,CACD,KAAK,EAAE,KAAK,EAAE,CAAC;YACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ;YAC1B,KAAK,CAAC,GAAG,sCAAY,CAA8B,+BAAE,KAAK,CAAC,OAAO,EAAE,CAAC;YAAA,CAAC;QAC1E,CAAC;QACD,MAAM,CAAC,CAAC;YACJ,MAAM,EAAE,CAAI;YACZ,IAAI,EAAE,MAAM;QAChB,CAAC;IACL,CAAC;;IAGL,wCAAoC,GAArB,0CAAoB;;;IDtEnC,wCAEC,GAFc,CAAC;cACd,yBAAQ;AACV,CAAC","sources":["plugins/index.js","plugins/packages/airtable/lib/airtable.js"],"sourcesContent":["const airtable = require('./packages/airtable/lib/airtable');\n\nexport default {\n  airtable\n}","const { QueryError } = require('common/query.error');\nconst got = require('got');\n\nlet AirtableQueryService = class AirtableQueryService {\n    authHeader(token) {\n        return { Authorization: `Bearer ${token}`, 'Content-Type': 'application/json' };\n    }\n    async run(sourceOptions, queryOptions, dataSourceId) {\n        let result = {};\n        let response = null;\n        const operation = queryOptions.operation;\n        const baseId = queryOptions['base_id'];\n        const tableName = queryOptions['table_name'];\n        const accessToken = sourceOptions['api_key'];\n        try {\n            switch (operation) {\n                case 'list_records': {\n                    const pageSize = queryOptions['page_size'];\n                    const offset = queryOptions['offset'];\n                    response = await got(`https://api.airtable.com/v0/${baseId}/${tableName}/?pageSize=${pageSize || ''}&offset=${offset || ''}`, {\n                        method: 'get',\n                        headers: this.authHeader(accessToken),\n                    });\n                    result = JSON.parse(response.body);\n                    break;\n                }\n                case 'retrieve_record': {\n                    const recordId = queryOptions['record_id'];\n                    response = await got(`https://api.airtable.com/v0/${baseId}/${tableName}/${recordId}`, {\n                        headers: this.authHeader(accessToken),\n                    });\n                    result = JSON.parse(response.body);\n                    break;\n                }\n                case 'update_record': {\n                    response = await got(`https://api.airtable.com/v0/${baseId}/${tableName}`, {\n                        method: 'patch',\n                        headers: this.authHeader(accessToken),\n                        json: {\n                            records: [\n                                {\n                                    id: queryOptions['record_id'],\n                                    fields: JSON.parse(queryOptions['body']),\n                                },\n                            ],\n                        },\n                    });\n                    result = JSON.parse(response.body);\n                    break;\n                }\n                case 'delete_record': {\n                    const _recordId = queryOptions['record_id'];\n                    response = await got(`https://api.airtable.com/v0/${baseId}/${tableName}/${_recordId}`, {\n                        method: 'delete',\n                        headers: this.authHeader(accessToken),\n                    });\n                    result = JSON.parse(response.body);\n                    break;\n                }\n            }\n        }\n        catch (error) {\n            console.log(error.response);\n            throw new QueryError('Query could not be completed', error.message, {});\n        }\n        return {\n            status: 'ok',\n            data: result,\n        };\n    }\n};\n\nexport default AirtableQueryService;"],"names":[],"version":3,"file":"index.js.map"}